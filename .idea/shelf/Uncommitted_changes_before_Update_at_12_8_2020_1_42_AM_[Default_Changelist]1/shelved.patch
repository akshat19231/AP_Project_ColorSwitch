Index: src/sample/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.animation.Animation;\r\nimport javafx.animation.Interpolator;\r\nimport javafx.animation.RotateTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.effect.DropShadow;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.transform.Rotate;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class Controller {\r\n    @FXML\r\n    private ImageView sRing1;\r\n    @FXML\r\n    private ImageView logo2;\r\n    @FXML\r\n    private ImageView logo3;\r\n    @FXML\r\n    private ImageView sRing2;\r\n    @FXML\r\n    private Button exitB;\r\n    @FXML\r\n    private Button newGameB;\r\n    @FXML\r\n    private Button leaderBoardB;\r\n    @FXML\r\n    private Button loadGameB;\r\n    private Stage ps;\r\n    DropShadow shadow = new DropShadow();\r\n    public void rot(ImageView imv, int mul){\r\n        RotateTransition rotate = new RotateTransition(Duration.millis(3000));\r\n        rotate.setAxis(Rotate.Z_AXIS);\r\n        rotate.setByAngle(360*mul);\r\n        rotate.setCycleCount(Animation.INDEFINITE);\r\n        rotate.setInterpolator(Interpolator.LINEAR);\r\n        //rotate.setAutoReverse(true);\r\n        rotate.setNode(imv);\r\n        rotate.play();\r\n    }\r\n\r\n    public void init(Stage s) throws IOException {\r\n        this.ps=s;\r\n        rot(sRing1,1);\r\n        rot(sRing2,-1);\r\n        rot(logo2,1);\r\n        rot(logo3,-1);\r\n    }\r\n    public void handleClick(){\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"load.fxml\"));\r\n        Parent root = null;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        loadScreen myCon=(loadScreen)(loader.getController());\r\n        myCon.init(this.ps);\r\n        //this.ps.setTitle(\"Color Switch\");\r\n        Scene main1=this.ps.getScene();\r\n        main1.setRoot(root);\r\n    }\r\n    public void getObs(ArrayList<gameElements> ar) throws IOException {\r\n        CircleObs crO=new CircleObs(0,800,0,0,0,0,1);\r\n        crO.makeObs(75);\r\n        ar.add(crO);\r\n        CircleObs crO1=new CircleObs(0,400,0,0,0,0,1);\r\n        crO1.makeObs(100);\r\n        ar.add(crO1);\r\n//        CircleObs crO2=new CircleObs(0,400,0,0,0,0,1);\r\n//        crO2.makeObs(75);\r\n//        ar.add(crO2);\r\n        squareObs sq1=new squareObs(-80,-21,0,0,0,0,2,123, 98,0);\r\n        sq1.makeObs();\r\n        ar.add(sq1);\r\n        CrossObs co1=new CrossObs(0,1200,0,0,0,0,0);\r\n        co1.makeObs();\r\n        ar.add(co1);\r\n        int offset=0;\r\n        for(int i=0;i<4;i++){\r\n            wheel w=new wheel(0,offset);\r\n            w.makeObs();\r\n            ar.add(w);\r\n            stars s=new stars(0,offset);\r\n            s.makeObs();\r\n            ar.add(s);\r\n            offset+=400;\r\n        }\r\n    }\r\n    public void newGame() throws IOException {\r\n        Game g1=new Game(1);\r\n        Player p1=new Player(\"Jishnu\");\r\n        g1.setPlayer(p1);\r\n        p1.setMyGame(g1);\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"gamePlay.fxml\"));\r\n        StackPane root = null;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        ArrayList <gameElements> obs1=new ArrayList<>();\r\n//        getObs(obs1);\r\n        assert root != null;\r\n        gamePlayController myCon=(gamePlayController)(loader.getController());\r\n        myCon.init(this.ps, root, loader,g1);\r\n        this.ps.setTitle(\"Color Switch\");\r\n        Scene main1=new Scene(root);\r\n        setKeyFunctions(main1, myCon);\r\n        this.ps.setScene(main1);\r\n        root.requestFocus();\r\n        myCon.startGame();\r\n    }\r\n    private void setKeyFunctions(Scene scene, gamePlayController Con) {\r\n        scene.setOnKeyPressed(e -> {\r\n            if (e.getCode() == KeyCode.SPACE) {\r\n                setOnUserInput(scene, Con);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setOnUserInput(Scene scene, gamePlayController c) {\r\n        //System.out.println(\"bruh\");\r\n//        if(!c.CLICKED){\r\n//            System.out.println(\"clicked!!!\");\r\n//        }\r\n        //c.CLICKED=true;\r\n        c.getGame().getMain_ball().vy=500;\r\n    }\r\n    public void quitGame() throws IOException{\r\n        Platform.exit();\r\n    }\r\n    public void highlightOn_e() throws IOException {\r\n        exitB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: bda0e0 ;\");\r\n    }\r\n    public void highlightOff_e() throws IOException {\r\n        exitB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: purple;\");\r\n    }\r\n    public void highlightOn_l() throws IOException {\r\n        leaderBoardB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: bda0e0 ;\");\r\n    }\r\n    public void highlightOff_l() throws IOException {\r\n        leaderBoardB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: purple;\");\r\n    }\r\n    public void highlightOn_n() throws IOException {\r\n        newGameB.setStyle(\"-fx-background-radius: 100px; -fx-border-width: 2px; -fx-background-color: a0a3e0 ;\");\r\n    }\r\n    public void highlightOff_n() throws IOException {\r\n        newGameB.setStyle(\"-fx-background-radius: 100px; -fx-border-width: 2px; -fx-background-color: white;\");\r\n    }\r\n    public void highlightOn_load() throws IOException {\r\n        loadGameB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: bda0e0;\");\r\n    }\r\n    public void highlightOff_load() throws IOException {\r\n        loadGameB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: purple;\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/sample/Controller.java	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ src/sample/Controller.java	(date 1607371356181)
@@ -13,8 +13,10 @@
 import javafx.scene.image.ImageView;
 import javafx.scene.input.KeyCode;
 import javafx.scene.layout.StackPane;
+import javafx.scene.paint.Color;
 import javafx.scene.transform.Rotate;
 import javafx.stage.Stage;
+import javafx.stage.StageStyle;
 import javafx.util.Duration;
 
 import java.io.IOException;
@@ -71,6 +73,7 @@
         Scene main1=this.ps.getScene();
         main1.setRoot(root);
     }
+
     public void getObs(ArrayList<gameElements> ar) throws IOException {
         CircleObs crO=new CircleObs(0,800,0,0,0,0,1);
         crO.makeObs(75);
@@ -98,7 +101,7 @@
             offset+=400;
         }
     }
-    public void newGame() throws IOException {
+    public void reDirect(){
         Game g1=new Game(1);
         Player p1=new Player("Jishnu");
         g1.setPlayer(p1);
@@ -114,7 +117,11 @@
 //        getObs(obs1);
         assert root != null;
         gamePlayController myCon=(gamePlayController)(loader.getController());
-        myCon.init(this.ps, root, loader,g1);
+        try {
+            myCon.init(this.ps, root, loader,g1);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
         this.ps.setTitle("Color Switch");
         Scene main1=new Scene(root);
         setKeyFunctions(main1, myCon);
@@ -122,6 +129,25 @@
         root.requestFocus();
         myCon.startGame();
     }
+    public void newGame() throws IOException {
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("newGame.fxml"));
+        Parent root = null;
+        try {
+            root = loader.load();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        Scene newScene = new Scene(root);
+        newScene.setFill(Color.TRANSPARENT);
+        newGameController myCon=(newGameController)(loader.getController());
+        myCon.init();
+        Stage newStage=new Stage(StageStyle.TRANSPARENT);
+        newStage.initOwner(this.ps);
+        newStage.setScene(newScene);
+        newStage.showAndWait();
+        if(myCon.giveState())
+            this.reDirect();
+    }
     private void setKeyFunctions(Scene scene, gamePlayController Con) {
         scene.setOnKeyPressed(e -> {
             if (e.getCode() == KeyCode.SPACE) {
Index: src/sample/gamePlayController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.animation.*;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Group;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.shape.Arc;\r\nimport javafx.scene.shape.Circle;\r\nimport javafx.scene.shape.Line;\r\nimport javafx.scene.text.Text;\r\nimport javafx.scene.transform.Rotate;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\nimport java.util.Random;\r\n\r\npublic class gamePlayController {\r\n    @FXML\r\n    public Circle ball;\r\n    @FXML\r\n    public Circle c;\r\n    @FXML\r\n    public Line l1;\r\n    @FXML\r\n    public Line l2;\r\n    @FXML\r\n    public Line l3;\r\n    @FXML\r\n    public Line l4;\r\n    @FXML\r\n    private Button backB;\r\n    @FXML\r\n    private Text scoreBoard;\r\n    private Game game;\r\n    public void init(Stage s, Parent p, FXMLLoader fml, Game g) throws IOException {\r\n        this.game=g;\r\n        this.game.initialiseObs();\r\n        ball.setLayoutY(ball.getLayoutY() - 3);\r\n        this.game.setPs(s);\r\n        this.game.setRoot(p);\r\n        this.game.setLoader(fml);\r\n        this.game.setTimer(null);\r\n        this.scoreBoard.setText(Integer.toString(this.game.getScore()));\r\n        this.game.setMain_ball(new Ball(0, 310,600));\r\n        ArrayList <Node> toBeAdded= new ArrayList<Node>();\r\n        int mul=1;\r\n        for(int i=0;i<this.game.getSize();i++){\r\n//            this.obs1.add(arr.get(i));\r\n            toBeAdded.add(this.game.getObs(i).getGroup());\r\n            if(this.game.getObs(i) instanceof CircleObs) {\r\n                ArrayList<Arc> getArcs = ((CircleObs) this.game.getObs(i)).getArcforRotation();\r\n                for (int j = 0; j < 4; j++) {\r\n                    setRotate(getArcs.get(j), mul);\r\n                }\r\n                if (mul == 1) {\r\n                    mul = -1;\r\n                } else {\r\n                    mul = 1;\r\n                }\r\n            }else{\r\n                if(this.game.getObs(i) instanceof stars)\r\n                    continue;\r\n                rotateLine((Group)toBeAdded.get(toBeAdded.size()-1));\r\n                if (mul == 1) {\r\n                    mul = -1;\r\n                } else {\r\n                    mul = 1;\r\n                }\r\n            }\r\n        }\r\n        for(int i=0;i<this.game.getSizeQ();i++){\r\n//            this.obs1.add(arr.get(i));\r\n            toBeAdded.add(this.game.getObsQ(i).getGroup());\r\n            if(this.game.getObsQ(i) instanceof CircleObs) {\r\n                ArrayList<Arc> getArcs = ((CircleObs) this.game.getObsQ(i)).getArcforRotation();\r\n                for (int j = 0; j < 4; j++) {\r\n                    setRotate(getArcs.get(j), mul);\r\n                }\r\n                if (mul == 1) {\r\n                    mul = -1;\r\n                } else {\r\n                    mul = 1;\r\n                }\r\n            }else{\r\n                if(this.game.getObsQ(i) instanceof stars)\r\n                    continue;\r\n                rotateLine((Group)toBeAdded.get(toBeAdded.size()-1));\r\n                if (mul == 1) {\r\n                    mul = -1;\r\n                } else {\r\n                    mul = 1;\r\n                }\r\n            }\r\n        }\r\n        assert this.game.getRoot() != null;\r\n        for(int j = 0; j<((StackPane)this.game.getRoot()).getChildren().size(); j++){\r\n            if(((StackPane)this.game.getRoot()).getChildren().get(j) instanceof Pane){\r\n                ((Pane) ((StackPane)this.game.getRoot()).getChildren().get(j)).getChildren().addAll(toBeAdded);\r\n            }\r\n        }\r\n\r\n    }\r\n    public Game getGame(){\r\n        return this.game;\r\n    }\r\n\r\n    public void regCollisionCheck(){\r\n        ArrayList<gameElements> tobeRemoved=new ArrayList<gameElements>();\r\n\r\n//            if((this.game.getObs(i) instanceof wheel) ||this.game.getObs(i) instanceof stars){\r\n//                if(this.game.getObs(i).collisionCheck(this.ball)){\r\n//                    if(this.game.getObs(i) instanceof stars) {\r\n//                        this.updateScore();\r\n//                        this.scoreBoard.setText(Integer.toString(this.game.getScore()));\r\n//                    }\r\n//                    tobeRemoved.add(this.game.getObs(i));\r\n//                }\r\n//            }else{\r\n        for(int i=0;i<this.game.getSizeQ();i++) {\r\n            if(this.game.getObsQ(i).collisionCheck(this.ball)){\r\n                this.GameOver();\r\n            }\r\n        }\r\n\r\n        for(int i=0;i<this.game.getSize();i++) {\r\n            if ((this.game.getObs(i) instanceof wheel) || this.game.getObs(i) instanceof stars) {\r\n                if (this.game.getObs(i).collisionCheck(this.ball)) {\r\n                    if (this.game.getObs(i) instanceof stars) {\r\n                        this.updateScore();\r\n                        this.scoreBoard.setText(Integer.toString(this.game.getScore()));\r\n                    }\r\n                    tobeRemoved.add(this.game.getObs(i));\r\n\r\n                }\r\n            }\r\n        }\r\n        for(int i=0;i<tobeRemoved.size();i++) {\r\n            for (int j = 0; j < ((StackPane) this.game.getRoot()).getChildren().size(); j++) {\r\n                if (((StackPane) this.game.getRoot()).getChildren().get(j) instanceof Pane) {\r\n                    ((Pane) ((StackPane) this.game.getRoot()).getChildren().get(j)).getChildren().remove(tobeRemoved.get(i).getGroup());\r\n                    this.game.remove(tobeRemoved.get(i));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void RefreshObs(int idx){\r\n//        if(this.game.getObs(idx).getPosY()>=799){\r\n//            this.game.getObs(idx).moveDown(-1600.0);\r\n//            if((this.game.getObs(idx) instanceof wheel) ||this.game.getObs(idx) instanceof stars){\r\n//                this.game.getObs(idx).refresh();\r\n//                for (int j = 0; j < ((StackPane) this.game.getRoot()).getChildren().size(); j++) {\r\n//                    if (((StackPane) this.game.getRoot()).getChildren().get(j) instanceof Pane) {\r\n//                        ((Pane) ((StackPane) this.game.getRoot()).getChildren().get(j)).getChildren().add(this.game.getObs(idx).getGroup());\r\n//                    }\r\n//                }\r\n//            }\r\n//        }\r\n\r\n    }\r\n\r\n    public void updateScore(){\r\n        this.game.levelUp();\r\n    }\r\n    public void fun(Game g){\r\n        double val=0;\r\n        if (g.getObsQ(0) instanceof CircleObs) val=275;\r\n        if( g.getSizeQ()>0 && g.getObsQ(0).getPosY()>=799-val){\r\n            for (int j = 0; j < ((StackPane) this.game.getRoot()).getChildren().size(); j++) {\r\n                if (((StackPane) this.game.getRoot()).getChildren().get(j) instanceof Pane) {\r\n                    ((Pane) ((StackPane) this.game.getRoot()).getChildren().get(j)).getChildren().remove(g.getObsQ(0).getGroup());\r\n                }\r\n            }\r\n            double y=(g.getObsQ(0)).getPosY();\r\n            //g.getObs(i).refresh();\r\n            g.removeQ();\r\n            //System.out.println(y);\r\n            int ret=g.update(1000);\r\n            stars new_s=new stars(0,1000);\r\n            new_s.makeObs();\r\n            wheel new_w=new wheel(0,1000);\r\n            new_w.makeObs();\r\n            this.game.add(new_s);\r\n            this.game.add(new_w);\r\n            System.out.println(\"updated\");\r\n            //System.out.println(g.getSizeQ());\r\n            //System.out.println();\r\n            for (int j = 0; j < ((StackPane) g.getRoot()).getChildren().size(); j++) {\r\n                if (((StackPane) g.getRoot()).getChildren().get(j) instanceof Pane) {\r\n                    ((Pane) ((StackPane) g.getRoot()).getChildren().get(j)).getChildren().addAll(g.getObsQ(g.getSizeQ()-1).getGroup(),new_s.getGroup(),new_w.getGroup());\r\n                    if(g.getObsQ(g.getSizeQ()-1) instanceof  CircleObs){\r\n                        ArrayList<Arc> getArcs = ((CircleObs) g.getObsQ(g.getSizeQ()-1)).getArcforRotation();\r\n                        for (int k = 0; k < 4; k++) {\r\n                            try {\r\n                                setRotate(getArcs.get(k), 1);\r\n                            } catch (IOException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    }else{\r\n                        rotateLine(g.getObsQ(g.getSizeQ()-1).getGroup());\r\n                    }\r\n//                    if(ret==2){\r\n//                        ((Pane) ((StackPane) g.getRoot()).getChildren().get(j)).getChildren().add(g.getObsQ(g.getSizeQ()-2).getGroup());\r\n//                        if(g.getObsQ(g.getSizeQ()-2) instanceof  CircleObs){\r\n//                            ArrayList<Arc> getArcs = ((CircleObs) g.getObsQ(g.getSizeQ()-2)).getArcforRotation();\r\n//                            for (int k = 0; k < 4; k++) {\r\n//                                try {\r\n//                                    setRotate(getArcs.get(k), 1);\r\n//                                } catch (IOException e) {\r\n//                                    e.printStackTrace();\r\n//                                }\r\n//                            }\r\n//                        }else{\r\n//                            rotateLine(g.getObsQ(g.getSizeQ()-2).getGroup());\r\n//                        }\r\n//                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void startGame(){\r\n        this.game.setOld_time(System.nanoTime());\r\n        Game g=this.game;\r\n        this.game.setTimer(new AnimationTimer() {\r\n            @Override\r\n            public void handle(long now){\r\n                g.settDiff((double)(now - g.getOld_time())/1000000000);\r\n                g.setOld_time(now);\r\n                animateBall();\r\n                regCollisionCheck();\r\n\r\n            }\r\n        });\r\n        this.game.getTimer().start();\r\n    }\r\n    public void moveObs(double dist){\r\n        for(int i=0;i<this.game.getSize();i++) {\r\n            this.game.getObs(i).moveDown(dist);\r\n            RefreshObs(i);\r\n\r\n        }\r\n        for(int i=0;i<this.game.getSizeQ();i++) {\r\n            this.game.getObsQ(i).moveDown(dist);\r\n            //this.game.getObsQ(i).print();\r\n\r\n        }\r\n        fun(this.game);\r\n    }\r\n    public void animateBall(){\r\n        double curY=this.ball.getLayoutY();\r\n        if(curY>=this.game.getMain_ball().floor && this.game.getMain_ball().vy<=0) {\r\n            this.game.getMain_ball().vy=0;\r\n            return;\r\n        }\r\n        double dist=(this.game.getMain_ball().vy * this.game.getDiff()) - ((2000 * this.game.getDiff() * this.game.getDiff()) / 2);\r\n        double ballCurY=this.ball.getLayoutY();\r\n        if(ballCurY-dist<340 ){\r\n            this.moveObs(340-ballCurY+dist);\r\n            this.ball.setLayoutY(340);\r\n        }else {\r\n            this.ball.setLayoutY(this.ball.getLayoutY() - ((this.game.getMain_ball().vy * this.game.getDiff()) - ((2000 * this.game.getDiff() * this.game.getDiff()) / 2)));\r\n\r\n        }\r\n        this.game.getMain_ball().posy = (int) this.ball.getLayoutY();\r\n        this.game.getMain_ball().vy = (int) (this.game.getMain_ball().vy - 2000 * this.game.getDiff());\r\n    }\r\n    public void pauseGame(){\r\n        this.game.getTimer().stop();\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"pause.fxml\"));\r\n        Parent root1 = null;\r\n        try {\r\n            root1 = loader.load();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        pauseController myCon=(pauseController) (loader.getController());\r\n        myCon.init(this.game.getPs(), this.game.getRoot(), this.game.getLoader(), this.game.getTimer(), this.game);\r\n        Scene main1=this.game.getPs().getScene();\r\n        main1.setRoot(root1);\r\n    }\r\n    public void GameOver(){\r\n        this.game.getTimer().stop();\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"gameOver.fxml\"));\r\n        Parent root1 = null;\r\n        try {\r\n            root1 = loader.load();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        gameOverController myCon=(gameOverController) (loader.getController());\r\n        myCon.init(this.game);\r\n        Scene main1=this.game.getPs().getScene();\r\n        main1.setRoot(root1);\r\n    }\r\n   public void setRotate(Arc arc, int multi) throws IOException{\r\n       Timeline animation = new Timeline(\r\n               new KeyFrame(Duration.ZERO, new KeyValue(arc.startAngleProperty(), arc.getStartAngle(), Interpolator.LINEAR)),\r\n               new KeyFrame(Duration.seconds(5), new KeyValue(arc.startAngleProperty(), arc.getStartAngle() - 360*multi, Interpolator.LINEAR))\r\n       );\r\n       animation.setCycleCount(Animation.INDEFINITE);\r\n       animation.play();\r\n   }\r\n   public void rotateLine(Group l){\r\n       RotateTransition rotate = new RotateTransition();\r\n       rotate.setAxis(Rotate.Z_AXIS);\r\n       rotate.setByAngle(360);\r\n       rotate.setCycleCount(Animation.INDEFINITE);\r\n       rotate.setInterpolator(Interpolator.LINEAR);\r\n       rotate.setDuration(Duration.millis(5000));\r\n       rotate.setNode(l);\r\n       rotate.play();\r\n   }\r\n    public void highlight_On() throws IOException {\r\n        backB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: bda0e0 ;\");\r\n    }\r\n    public void highlight_Off() throws IOException {\r\n        backB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: purple;\");\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/sample/gamePlayController.java	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ src/sample/gamePlayController.java	(date 1607366664634)
@@ -26,8 +26,8 @@
 import java.util.Random;
 
 public class gamePlayController {
-    @FXML
-    public Circle ball;
+//    @FXML
+//    public Circle ball;
     @FXML
     public Circle c;
     @FXML
@@ -46,17 +46,17 @@
     public void init(Stage s, Parent p, FXMLLoader fml, Game g) throws IOException {
         this.game=g;
         this.game.initialiseObs();
-        ball.setLayoutY(ball.getLayoutY() - 3);
         this.game.setPs(s);
         this.game.setRoot(p);
         this.game.setLoader(fml);
         this.game.setTimer(null);
         this.scoreBoard.setText(Integer.toString(this.game.getScore()));
         this.game.setMain_ball(new Ball(0, 310,600));
+        this.game.getMain_ball().getCircle().setLayoutY(this.game.getMain_ball().getCircle().getLayoutY() - 3);
         ArrayList <Node> toBeAdded= new ArrayList<Node>();
+        toBeAdded.add(this.game.getMain_ball().getCircle());
         int mul=1;
         for(int i=0;i<this.game.getSize();i++){
-//            this.obs1.add(arr.get(i));
             toBeAdded.add(this.game.getObs(i).getGroup());
             if(this.game.getObs(i) instanceof CircleObs) {
                 ArrayList<Arc> getArcs = ((CircleObs) this.game.getObs(i)).getArcforRotation();
@@ -80,7 +80,6 @@
             }
         }
         for(int i=0;i<this.game.getSizeQ();i++){
-//            this.obs1.add(arr.get(i));
             toBeAdded.add(this.game.getObsQ(i).getGroup());
             if(this.game.getObsQ(i) instanceof CircleObs) {
                 ArrayList<Arc> getArcs = ((CircleObs) this.game.getObsQ(i)).getArcforRotation();
@@ -128,14 +127,14 @@
 //                }
 //            }else{
         for(int i=0;i<this.game.getSizeQ();i++) {
-            if(this.game.getObsQ(i).collisionCheck(this.ball)){
+            if(this.game.getObsQ(i).collisionCheck(this.game.getMain_ball().getCircle())){
                 this.GameOver();
             }
         }
 
         for(int i=0;i<this.game.getSize();i++) {
             if ((this.game.getObs(i) instanceof wheel) || this.game.getObs(i) instanceof stars) {
-                if (this.game.getObs(i).collisionCheck(this.ball)) {
+                if (this.game.getObs(i).collisionCheck(this.game.getMain_ball().getCircle())) {
                     if (this.game.getObs(i) instanceof stars) {
                         this.updateScore();
                         this.scoreBoard.setText(Integer.toString(this.game.getScore()));
@@ -258,21 +257,21 @@
         fun(this.game);
     }
     public void animateBall(){
-        double curY=this.ball.getLayoutY();
+        double curY=this.game.getMain_ball().getCircle().getLayoutY();
         if(curY>=this.game.getMain_ball().floor && this.game.getMain_ball().vy<=0) {
             this.game.getMain_ball().vy=0;
             return;
         }
         double dist=(this.game.getMain_ball().vy * this.game.getDiff()) - ((2000 * this.game.getDiff() * this.game.getDiff()) / 2);
-        double ballCurY=this.ball.getLayoutY();
+        double ballCurY=this.game.getMain_ball().getCircle().getLayoutY();
         if(ballCurY-dist<340 ){
             this.moveObs(340-ballCurY+dist);
-            this.ball.setLayoutY(340);
+            this.game.getMain_ball().getCircle().setLayoutY(340);
         }else {
-            this.ball.setLayoutY(this.ball.getLayoutY() - ((this.game.getMain_ball().vy * this.game.getDiff()) - ((2000 * this.game.getDiff() * this.game.getDiff()) / 2)));
+            this.game.getMain_ball().getCircle().setLayoutY(this.game.getMain_ball().getCircle().getLayoutY() - ((this.game.getMain_ball().vy * this.game.getDiff()) - ((2000 * this.game.getDiff() * this.game.getDiff()) / 2)));
 
         }
-        this.game.getMain_ball().posy = (int) this.ball.getLayoutY();
+        this.game.getMain_ball().posy = (int) this.game.getMain_ball().getCircle().getLayoutY();
         this.game.getMain_ball().vy = (int) (this.game.getMain_ball().vy - 2000 * this.game.getDiff());
     }
     public void pauseGame(){
@@ -285,7 +284,7 @@
             e.printStackTrace();
         }
         pauseController myCon=(pauseController) (loader.getController());
-        myCon.init(this.game.getPs(), this.game.getRoot(), this.game.getLoader(), this.game.getTimer(), this.game);
+        myCon.init(this.game);
         Scene main1=this.game.getPs().getScene();
         main1.setRoot(root1);
     }
Index: src/sample/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.animation.Animation;\r\nimport javafx.animation.AnimationTimer;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.control.Button;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\nimport java.util.Random;\r\n\r\npublic class Game {\r\n    private Player player;\r\n    private int level;\r\n    private int GameId;\r\n    private int score;\r\n    public Ball main_ball;\r\n    private Stage ps;\r\n    private Parent root;\r\n    private FXMLLoader loader;\r\n    private stars Star;\r\n    private AnimationTimer timer;\r\n    private long old_time;\r\n    private double tDiff;\r\n    public boolean CLICKED;\r\n    private LinkedList<gameElements> ar;\r\n    public LinkedList <gameElements> obsQ;\r\n\r\n    public Game(int idx){\r\n        this.GameId=idx;\r\n        this.level=1;\r\n        this.score=0;\r\n        this.ar=new LinkedList<gameElements>();\r\n        this.obsQ=new LinkedList<gameElements>();\r\n    }\r\n\r\n    public void setMain_ball(Ball main_ball) {\r\n        this.main_ball = main_ball;\r\n    }\r\n    public void setPs(Stage ps){\r\n        this.ps=ps;\r\n    }\r\n    public void setLoader(FXMLLoader loader){\r\n        this.loader=loader;\r\n    }\r\n    public void setRoot(Parent root){\r\n        this.root=root;\r\n    }\r\n    public void setTimer(AnimationTimer timer){\r\n        this.timer=timer;\r\n    }\r\n    public void setOld_time(long old_time){\r\n        this.old_time=old_time;\r\n    }\r\n    public void settDiff(Double tDiff){\r\n        this.tDiff=tDiff;\r\n    }\r\n    public void setPlayer(Player p){\r\n        this.player=p;\r\n    }\r\n    public Ball getMain_ball() {\r\n        return this.main_ball;\r\n    }\r\n    public Stage getPs(){\r\n        return this.ps;\r\n    }\r\n    public FXMLLoader getLoader(){\r\n        return this.loader;\r\n    }\r\n    public Parent getRoot(){\r\n        return this.root;\r\n    }\r\n    public AnimationTimer getTimer(){\r\n        return this.timer;\r\n    }\r\n    public long getOld_time(){\r\n        return this.old_time;\r\n    }\r\n    public Double getDiff(){\r\n        return this.tDiff;\r\n    }\r\n    public int getSize(){\r\n        return this.ar.size();\r\n    }\r\n    public gameElements getObs(int idx){\r\n        return this.ar.get(idx);\r\n    }\r\n    public gameElements getObsQ(int idx){\r\n        return this.obsQ.get(idx);\r\n    }\r\n    public Player getPlayer(){\r\n        return this.player;\r\n    }\r\n    public void levelUp(){\r\n        this.score++;\r\n        this.level++;\r\n    }\r\n    public void removeQ(){\r\n        this.obsQ.remove(0);\r\n    }\r\n    public void remove(gameElements g){\r\n        this.ar.remove(g);\r\n    }\r\n    public void add(gameElements g){\r\n        this.ar.add(g);\r\n    }\r\n    public int getScore(){\r\n        return this.score;\r\n    }\r\n    public int getLevel(){\r\n        return this.level;\r\n    }\r\n    public int getSizeQ(){\r\n        return this.obsQ.size();\r\n    }\r\n    public void useStars(){\r\n        this.score = this.score - 5;\r\n    }\r\n    public int update(double pos){\r\n        Random random = new Random();\r\n        int index = random.nextInt(4);\r\n\r\n        if(index==0){\r\n            CircleObs crO=new CircleObs(0,pos,0,0,0,0,1);\r\n            crO.makeObs(75);\r\n            obsQ.add(crO);\r\n            return 1;\r\n        }else if(index==1){\r\n            squareObs sq1=new squareObs(-80,-21,0,0,0,0,2,123, 98, pos);\r\n            sq1.makeObs();\r\n            obsQ.add(sq1);\r\n            return 1;\r\n        }else if(index==2){\r\n            CrossObs co1=new CrossObs(0,pos,0,0,0,0,0);\r\n            co1.makeObs();\r\n            obsQ.add(co1);\r\n            return 1;\r\n        }else{\r\n            squareObs sq1=new squareObs(-80,-21,0,0,0,0,2,123, 98, pos);\r\n            sq1.makeObs();\r\n            obsQ.add(sq1);\r\n            return 1;\r\n        }\r\n    }\r\n    public void initialiseObs(){\r\n        CircleObs crO=new CircleObs(0,1000,0,0,0,0,1);\r\n        crO.makeObs(75);\r\n        wheel w1=new wheel(0,1000);\r\n        w1.makeObs();\r\n        stars s1=new stars(0,1000);\r\n        s1.makeObs();\r\n        squareObs sq1=new squareObs(-80,-21,0,0,0,0,2,123, 98, 0);\r\n        sq1.makeObs();\r\n        wheel w2=new wheel(0,0);\r\n        w2.makeObs();\r\n        stars s2=new stars(0,0);\r\n        s2.makeObs();\r\n        CrossObs co1=new CrossObs(0,500,0,0,0,0,0);\r\n        co1.makeObs();\r\n        wheel w3=new wheel(0,500);\r\n        w3.makeObs();\r\n        stars s3=new stars(0,500);\r\n        s3.makeObs();\r\n        this.obsQ.add(sq1);\r\n        this.ar.add(w2);\r\n        this.ar.add(s2);\r\n        this.obsQ.add(co1);\r\n        this.ar.add(w3);\r\n        this.ar.add(s3);\r\n        this.obsQ.add(crO);\r\n        this.ar.add(w1);\r\n        this.ar.add(s1);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/sample/Game.java	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ src/sample/Game.java	(date 1607361858757)
@@ -146,6 +146,9 @@
             obsQ.add(sq1);
             return 1;
         }
+    }
+    public void reset(){
+
     }
     public void initialiseObs(){
         CircleObs crO=new CircleObs(0,1000,0,0,0,0,1);
Index: src/sample/Ball.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\npublic class Ball {\r\n    public int vy;\r\n    public double posx;\r\n    public double posy;\r\n    public double floor;\r\n    public Ball(int v, double x, double y){\r\n        this.vy=v;\r\n        this.posx=x;\r\n        this.posy=y;\r\n        this.floor=y;\r\n    }\r\n    public void setImage(){}\r\n    public void update(){\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/sample/Ball.java	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ src/sample/Ball.java	(date 1607364519521)
@@ -1,17 +1,30 @@
 package sample;
 
+import javafx.scene.paint.Paint;
+import javafx.scene.shape.Circle;
+
 public class Ball {
     public int vy;
     public double posx;
     public double posy;
     public double floor;
+    public Circle ball;
     public Ball(int v, double x, double y){
         this.vy=v;
         this.posx=x;
         this.posy=y;
         this.floor=y;
+        this.ball=new Circle();
+        this.ball.setFill(Paint.valueOf("#00c8ff"));
+        this.ball.setRadius(9);
+        this.ball.setCenterY(0);
+        this.ball.setCenterX(0);
+        this.ball.setLayoutY(569);
+        this.ball.setLayoutX(312);
     }
-    public void setImage(){}
+    public Circle getCircle(){
+        return this.ball;
+    }
     public void update(){
 
     }
Index: src/sample/pauseController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.animation.AnimationTimer;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class pauseController {\r\n    @FXML\r\n    private Button backB;\r\n    @FXML\r\n    private Button lb1;\r\n    @FXML\r\n    private Button lb2;\r\n    @FXML\r\n    private Button lb3;\r\n    private Stage ps;\r\n    private Parent root;\r\n    private FXMLLoader loader;\r\n    private AnimationTimer timer;\r\n    private Game g;\r\n    public void init(Stage s, Parent p, FXMLLoader fml, AnimationTimer timer, Game g){\r\n        this.ps=s;\r\n        this.root=p;\r\n        this.loader=fml;\r\n        this.timer=timer;\r\n        this.g=g;\r\n\r\n    }\r\n    public void goBack() throws IOException {\r\n        this.g.setOld_time(System.nanoTime());\r\n        Scene main1=this.ps.getScene();\r\n        main1.setRoot(this.root);\r\n        this.timer.start();\r\n        this.root.requestFocus();\r\n\r\n    }\r\n    public void quitToMain() throws IOException {\r\n\r\n        FXMLLoader loader1 = new FXMLLoader(getClass().getResource(\"sample.fxml\"));\r\n        Parent root = null;\r\n        try {\r\n            root = loader1.load();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Controller myCon=(Controller)(loader1.getController());\r\n        try {\r\n            myCon.init(this.ps);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //this.ps.setTitle(\"Color Switch\");\r\n        Scene main1=this.ps.getScene();\r\n        main1.setRoot(root);\r\n    }\r\n    public void highlightOn_b() throws IOException {\r\n        backB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: bda0e0 ;\");\r\n    }\r\n    public void highlightOff_b() throws IOException {\r\n        backB.setStyle(\"-fx-background-radius: 100px; -fx-background-color: purple;\");\r\n    }\r\n    public void highlightOn_1() throws IOException {\r\n        lb1.setStyle(\"-fx-background-radius: 10px; -fx-background-color: #5B7065, linear-gradient(#5B7065 50%, #304040 100%), radial-gradient(center 50% -40%, radius 200%, #5B7065 45%, #304040 50%);;\");\r\n    }\r\n    public void highlightOff_1() throws IOException {\r\n        lb1.setStyle(\"-fx-background-radius: 10px; -fx-background-color: #2F496E, linear-gradient(#2F496E 50%, #304040 100%), radial-gradient(center 50% -40%, radius 200%, #2F496E 45%, #304040 50%);;\");\r\n    }\r\n    public void highlightOn_2() throws IOException {\r\n        lb2.setStyle(\"-fx-background-radius: 10px; -fx-background-color: #5B7065, linear-gradient(#5B7065 50%, #304040 100%), radial-gradient(center 50% -40%, radius 200%, #5B7065 45%, #304040 50%);;\");\r\n    }\r\n    public void highlightOff_2() throws IOException {\r\n        lb2.setStyle(\"-fx-background-radius: 10px; -fx-background-color: #2F496E, linear-gradient(#2F496E 50%, #304040 100%), radial-gradient(center 50% -40%, radius 200%, #2F496E 45%, #304040 50%);;\");\r\n    }\r\n    public void highlightOn_3() throws IOException {\r\n        lb3.setStyle(\"-fx-background-radius: 10px; -fx-background-color: #5B7065, linear-gradient(#5B7065 50%, #304040 100%), radial-gradient(center 50% -40%, radius 200%, #5B7065 45%, #304040 50%);;\");\r\n    }\r\n    public void highlightOff_3() throws IOException {\r\n        lb3.setStyle(\"-fx-background-radius: 10px; -fx-background-color: #2F496E, linear-gradient(#2F496E 50%, #304040 100%), radial-gradient(center 50% -40%, radius 200%, #2F496E 45%, #304040 50%);;\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/sample/pauseController.java	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ src/sample/pauseController.java	(date 1607205560378)
@@ -24,13 +24,12 @@
     private FXMLLoader loader;
     private AnimationTimer timer;
     private Game g;
-    public void init(Stage s, Parent p, FXMLLoader fml, AnimationTimer timer, Game g){
-        this.ps=s;
-        this.root=p;
-        this.loader=fml;
-        this.timer=timer;
+    public void init( Game g){
         this.g=g;
-
+        this.ps=this.g.getPs();
+        this.root=this.g.getRoot();
+        this.loader=this.g.getLoader();
+        this.timer=this.g.getTimer();
     }
     public void goBack() throws IOException {
         this.g.setOld_time(System.nanoTime());
Index: src/sample/triangleObs.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<!--<?xml version=\"1.0\" encoding=\"UTF-8\"?>-->\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.layout.StackPane?>\r\n<?import javafx.scene.shape.Arc?>\r\n<?import javafx.scene.shape.Circle?>\r\n<?import javafx.scene.shape.Line?>\r\n\r\n<StackPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"669.0\" prefWidth=\"620.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.gamePlayController\">\r\n    <children>\r\n        <Pane prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n            <children>\r\n                <ImageView fitHeight=\"669.0\" fitWidth=\"627.0\" layoutX=\"-2.0\" pickOnBounds=\"true\">\r\n                    <image>\r\n                        <Image url=\"@../assets/bg4.png\" />\r\n                    </image>\r\n                </ImageView>\r\n                <Circle fx:id=\"ball\" fill=\"#00c8ff\" layoutX=\"312.0\" layoutY=\"569.0\" radius=\"10.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" />\r\n                <Button fx:id=\"backB\" layoutX=\"23.0\" layoutY=\"20.0\" mnemonicParsing=\"false\" onMouseClicked=\"#pauseGame\" onMouseEntered=\"#highlight_On\" onMouseExited=\"#highlight_Off\" prefHeight=\"43.0\" prefWidth=\"47.0\" style=\"-fx-background-color: purple; -fx-background-radius: 100px;\">\r\n                    <graphic>\r\n                        <ImageView fitHeight=\"34.0\" fitWidth=\"35.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                            <image>\r\n                                <Image url=\"@../assets/pause_preview_rev_1.png\" />\r\n                            </image>\r\n                        </ImageView>\r\n                    </graphic>\r\n                </Button>\r\n                <ImageView fitHeight=\"16.0\" fitWidth=\"22.0\" layoutX=\"304.0\" layoutY=\"261.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                    <image>\r\n                        <Image url=\"@../assets/star_preview_rev_1.png\" />\r\n                    </image>\r\n                </ImageView>\r\n                <Arc fill=\"#00c8ff\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Arc fill=\"#f70578\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" startAngle=\"270.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Arc fill=\"#440580\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" startAngle=\"180.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Arc fill=\"#f0f505\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" startAngle=\"90.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Line fx:id=\"l3\" endX=\"-18.0\" layoutX=\"371.0\" layoutY=\"302.0\" startX=\"-100.0\" stroke=\"AQUA\" strokeLineCap=\"ROUND\" strokeWidth=\"20.0\" />\r\n                <Line fx:id=\"l2\" endX=\"-63.333343505859375\" endY=\"-80.33331298828125\" layoutX=\"371.0\" layoutY=\"301.0\" startX=\"-100.0\" stroke=\"#f70578\" strokeLineCap=\"ROUND\" strokeWidth=\"20.0\" />\r\n                <Line fx:id=\"l1\" endX=\"-146.99996948242188\" endY=\"-80.66665649414062\" layoutX=\"456.0\" layoutY=\"301.0\" startX=\"-103.66665649414062\" startY=\"0.66668701171875\" stroke=\"#f0f505\" strokeLineCap=\"ROUND\" strokeWidth=\"20.0\" />\r\n            </children>\r\n        </Pane>\r\n    </children>\r\n</StackPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/sample/triangleObs.fxml	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ src/sample/triangleObs.fxml	(date 1607283065214)
@@ -39,9 +39,9 @@
                 <Arc fill="#f70578" layoutX="311.0" layoutY="120.0" length="90.0" radiusX="10.0" radiusY="10.0" startAngle="270.0" stroke="BLACK" strokeType="INSIDE" type="ROUND" />
                 <Arc fill="#440580" layoutX="311.0" layoutY="120.0" length="90.0" radiusX="10.0" radiusY="10.0" startAngle="180.0" stroke="BLACK" strokeType="INSIDE" type="ROUND" />
                 <Arc fill="#f0f505" layoutX="311.0" layoutY="120.0" length="90.0" radiusX="10.0" radiusY="10.0" startAngle="90.0" stroke="BLACK" strokeType="INSIDE" type="ROUND" />
-                <Line fx:id="l3" endX="-18.0" layoutX="371.0" layoutY="302.0" startX="-100.0" stroke="AQUA" strokeLineCap="ROUND" strokeWidth="20.0" />
-                <Line fx:id="l2" endX="-63.333343505859375" endY="-80.33331298828125" layoutX="371.0" layoutY="301.0" startX="-100.0" stroke="#f70578" strokeLineCap="ROUND" strokeWidth="20.0" />
-                <Line fx:id="l1" endX="-146.99996948242188" endY="-80.66665649414062" layoutX="456.0" layoutY="301.0" startX="-103.66665649414062" startY="0.66668701171875" stroke="#f0f505" strokeLineCap="ROUND" strokeWidth="20.0" />
+                <Line fx:id="l3" endX="14.0" layoutX="375.0" layoutY="325.0" startX="-138.0" stroke="AQUA" strokeLineCap="ROUND" strokeWidth="20.0" />
+                <Line fx:id="l2" endX="-46.0" endY="-106.0" layoutX="357.0" layoutY="291.0" startX="-122.0" startY="29.0" stroke="#f70578" strokeLineCap="ROUND" strokeWidth="20.0" />
+                <Line fx:id="l1" endX="-166.0" endY="-105.0" layoutX="479.0" layoutY="291.0" startX="-88.0" startY="30.0" stroke="#f0f505" strokeLineCap="ROUND" strokeWidth="20.0" />
             </children>
         </Pane>
     </children>
Index: out/production/AP_project/sample/triangleObs.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<!--<?xml version=\"1.0\" encoding=\"UTF-8\"?>-->\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.layout.StackPane?>\r\n<?import javafx.scene.shape.Arc?>\r\n<?import javafx.scene.shape.Circle?>\r\n<?import javafx.scene.shape.Line?>\r\n\r\n<StackPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"669.0\" prefWidth=\"620.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.gamePlayController\">\r\n    <children>\r\n        <Pane prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n            <children>\r\n                <ImageView fitHeight=\"669.0\" fitWidth=\"627.0\" layoutX=\"-2.0\" pickOnBounds=\"true\">\r\n                    <image>\r\n                        <Image url=\"@../assets/bg4.png\" />\r\n                    </image>\r\n                </ImageView>\r\n                <Circle fx:id=\"ball\" fill=\"#00c8ff\" layoutX=\"312.0\" layoutY=\"569.0\" radius=\"10.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" />\r\n                <Button fx:id=\"backB\" layoutX=\"23.0\" layoutY=\"20.0\" mnemonicParsing=\"false\" onMouseClicked=\"#pauseGame\" onMouseEntered=\"#highlight_On\" onMouseExited=\"#highlight_Off\" prefHeight=\"43.0\" prefWidth=\"47.0\" style=\"-fx-background-color: purple; -fx-background-radius: 100px;\">\r\n                    <graphic>\r\n                        <ImageView fitHeight=\"34.0\" fitWidth=\"35.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                            <image>\r\n                                <Image url=\"@../assets/pause_preview_rev_1.png\" />\r\n                            </image>\r\n                        </ImageView>\r\n                    </graphic>\r\n                </Button>\r\n                <ImageView fitHeight=\"16.0\" fitWidth=\"22.0\" layoutX=\"304.0\" layoutY=\"261.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                    <image>\r\n                        <Image url=\"@../assets/star_preview_rev_1.png\" />\r\n                    </image>\r\n                </ImageView>\r\n                <Arc fill=\"#00c8ff\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Arc fill=\"#f70578\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" startAngle=\"270.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Arc fill=\"#440580\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" startAngle=\"180.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Arc fill=\"#f0f505\" layoutX=\"311.0\" layoutY=\"120.0\" length=\"90.0\" radiusX=\"10.0\" radiusY=\"10.0\" startAngle=\"90.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" type=\"ROUND\" />\r\n                <Line fx:id=\"l3\" endX=\"-18.0\" layoutX=\"371.0\" layoutY=\"302.0\" startX=\"-100.0\" stroke=\"AQUA\" strokeLineCap=\"ROUND\" strokeWidth=\"20.0\" />\r\n                <Line fx:id=\"l2\" endX=\"-63.333343505859375\" endY=\"-80.33331298828125\" layoutX=\"371.0\" layoutY=\"301.0\" startX=\"-100.0\" stroke=\"#f70578\" strokeLineCap=\"ROUND\" strokeWidth=\"20.0\" />\r\n                <Line fx:id=\"l1\" endX=\"-146.99996948242188\" endY=\"-80.66665649414062\" layoutX=\"456.0\" layoutY=\"301.0\" startX=\"-103.66665649414062\" startY=\"0.66668701171875\" stroke=\"#f0f505\" strokeLineCap=\"ROUND\" strokeWidth=\"20.0\" />\r\n            </children>\r\n        </Pane>\r\n    </children>\r\n</StackPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/AP_project/sample/triangleObs.fxml	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ out/production/AP_project/sample/triangleObs.fxml	(date 1607283065214)
@@ -39,9 +39,9 @@
                 <Arc fill="#f70578" layoutX="311.0" layoutY="120.0" length="90.0" radiusX="10.0" radiusY="10.0" startAngle="270.0" stroke="BLACK" strokeType="INSIDE" type="ROUND" />
                 <Arc fill="#440580" layoutX="311.0" layoutY="120.0" length="90.0" radiusX="10.0" radiusY="10.0" startAngle="180.0" stroke="BLACK" strokeType="INSIDE" type="ROUND" />
                 <Arc fill="#f0f505" layoutX="311.0" layoutY="120.0" length="90.0" radiusX="10.0" radiusY="10.0" startAngle="90.0" stroke="BLACK" strokeType="INSIDE" type="ROUND" />
-                <Line fx:id="l3" endX="-18.0" layoutX="371.0" layoutY="302.0" startX="-100.0" stroke="AQUA" strokeLineCap="ROUND" strokeWidth="20.0" />
-                <Line fx:id="l2" endX="-63.333343505859375" endY="-80.33331298828125" layoutX="371.0" layoutY="301.0" startX="-100.0" stroke="#f70578" strokeLineCap="ROUND" strokeWidth="20.0" />
-                <Line fx:id="l1" endX="-146.99996948242188" endY="-80.66665649414062" layoutX="456.0" layoutY="301.0" startX="-103.66665649414062" startY="0.66668701171875" stroke="#f0f505" strokeLineCap="ROUND" strokeWidth="20.0" />
+                <Line fx:id="l3" endX="14.0" layoutX="375.0" layoutY="325.0" startX="-138.0" stroke="AQUA" strokeLineCap="ROUND" strokeWidth="20.0" />
+                <Line fx:id="l2" endX="-46.0" endY="-106.0" layoutX="357.0" layoutY="291.0" startX="-122.0" startY="29.0" stroke="#f70578" strokeLineCap="ROUND" strokeWidth="20.0" />
+                <Line fx:id="l1" endX="-166.0" endY="-105.0" layoutX="479.0" layoutY="291.0" startX="-88.0" startY="30.0" stroke="#f0f505" strokeLineCap="ROUND" strokeWidth="20.0" />
             </children>
         </Pane>
     </children>
Index: out/production/AP_project/sample/gamePlay.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.layout.StackPane?>\r\n<?import javafx.scene.shape.Circle?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<StackPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"669.0\" prefWidth=\"620.0\" xmlns=\"http://javafx.com/javafx/11.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.gamePlayController\">\r\n   <children>\r\n      <Pane prefHeight=\"200.0\" prefWidth=\"200.0\" style=\"-fx-background-color: black;\">\r\n         <children>\r\n            <Circle fx:id=\"ball\" fill=\"#00c8ff\" layoutX=\"312.0\" layoutY=\"569.0\" radius=\"9.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" />\r\n            <Button fx:id=\"backB\" layoutX=\"23.0\" layoutY=\"20.0\" mnemonicParsing=\"false\" onMouseClicked=\"#pauseGame\" onMouseEntered=\"#highlight_On\" onMouseExited=\"#highlight_Off\" prefHeight=\"43.0\" prefWidth=\"47.0\" style=\"-fx-background-color: purple; -fx-background-radius: 100px;\">\r\n               <graphic>\r\n                  <ImageView fitHeight=\"34.0\" fitWidth=\"35.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../assets/pause_preview_rev_1.png\" />\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n            </Button>\r\n            <Text fx:id=\"scoreBoard\" fill=\"WHITE\" layoutX=\"31.0\" layoutY=\"128.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" wrappingWidth=\"34.0\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"60.0\" />\r\n               </font>\r\n            </Text>\r\n         </children>\r\n      </Pane>\r\n   </children>\r\n</StackPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/AP_project/sample/gamePlay.fxml	(revision b241961496d3e8895f0d94c0bd58c8fef87b661d)
+++ out/production/AP_project/sample/gamePlay.fxml	(date 1607364604155)
@@ -5,7 +5,6 @@
 <?import javafx.scene.image.ImageView?>
 <?import javafx.scene.layout.Pane?>
 <?import javafx.scene.layout.StackPane?>
-<?import javafx.scene.shape.Circle?>
 <?import javafx.scene.text.Font?>
 <?import javafx.scene.text.Text?>
 
@@ -13,7 +12,6 @@
    <children>
       <Pane prefHeight="200.0" prefWidth="200.0" style="-fx-background-color: black;">
          <children>
-            <Circle fx:id="ball" fill="#00c8ff" layoutX="312.0" layoutY="569.0" radius="9.0" stroke="BLACK" strokeType="INSIDE" />
             <Button fx:id="backB" layoutX="23.0" layoutY="20.0" mnemonicParsing="false" onMouseClicked="#pauseGame" onMouseEntered="#highlight_On" onMouseExited="#highlight_Off" prefHeight="43.0" prefWidth="47.0" style="-fx-background-color: purple; -fx-background-radius: 100px;">
                <graphic>
                   <ImageView fitHeight="34.0" fitWidth="35.0" pickOnBounds="true" preserveRatio="true">
